<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEALi4AAAEAGADAGgAAFgAAACgAAAAuAAAAXAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAYEQY0JA1HMRJPNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQ
        NxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVQNxVPNhRGLxIxIg0V
        DgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgRBlA3FXdePJuNebKpn7y3r765sr+5sr+6
        s8C7tMG8tcG8tcK9tsK9tsO+t8O+t8O+t8S+t8S/t8S/t8S+t8O+t8O+t8O+t8K9tsK9tsG8tcG8tcC7
        tL+6s7+5sr65sry2rrConJiJdHNZNkw0ExMNBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALiAMbFEsraOX
        zc3Nz8/P0NDQ0dHR0tLS09PT1NTU1dXV1tbW19fX19fX2NjY2NjY2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ
        2dnZ2NjY2NjY19fX19fX1tbW1dXV1NTU09PT0tLS0dHR0NDQzs7OzczMppuMZ0slJhoKAAAAAAAAAAAA
        AAAAAAAAAAAsHgt1XDrDwLzOzs7Pz8/Q0NDR0dHT09PU1NTV1dXW1tbX19fY2NjZ2dnZ2dna2tra2trb
        29vb29vb29vb29vb29vb29vb29vb29va2tra2trZ2dnZ2dnY2NjX19fW1tbV1dXU1NTT09PR0dHQ0NDP
        z8/Ozs6+urRvVDAjGAkAAAAAAAAAAAAAABQOBWpOKMK+us7Ozs/Pz9HR0dLS0tPT09TU1NbW1tfX19jY
        2NnZ2dra2tvb29vb29zc3N3d3d3d3d7e3t7e3t7e3t7e3t7e3t3d3d3d3d3d3dzc3Nvb29vb29ra2tnZ
        2djY2NfX19bW1tTU1NPT09LS0tDQ0M/Pz87Ozru2r2JGHw0JAwAAAAAAAAAASTITpZmKzs7Oz8/P0dHR
        0tLS09PT1dXV1tbW19fX2dnZ2tra29vb3Nzc3d3d3d3d3t7e39/f39/f4ODg4ODg4ODg4ODg4ODg4ODg
        39/f39/f3t7e3d3d3d3d3Nzc29vb2tra2dnZ19fX1tbW1dXV09PT0tLS0NDQz8/Pzs7Omot3PisQAAAA
        AAANCQNtUSzMy8vPz8/R0dHS0tLT09PV1dXW1tbY2NjZ2dna2trc3Nzd3d3e3t7f39/g4ODg4ODh4eHh
        4eHi4uLi4uLi4uLi4uLi4uLi4uLh4eHh4eHg4ODg4ODf39/e3t7d3d3c3Nza2trZ2dnY2NjW1tbV1dXT
        09PS0tLQ0NDPz8/HxcNjRyAGBAEAACcbCo16Yc/Pz9DQ0NDQ0M7Ny9DOzNHQztPRz9TS0dXU0tbV09jW
        1NnX1drY19vZ19za2Nzb2d3c2t7c2t7d297d297d297d297d297d297c2t3c2tzb2dza2NvZ19rY1tnX
        1djW1NbV09XU0tTS0dLRz9HPzs/OzM7Ny9HQ0NDQ0M/Pz4FrTh0TBwAAOCYOoJOB0NDQ0tLStKugYkMZ
        YkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZvbau0dHR0NDQlYRuLR8M
        AAA9KhCnm4vR0dHT09O1rKFiQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxli
        QxliQxm+uK/T09PR0dGbjHgzIw0AAD0qEKecjNLS0tTU1LatomJDGWJDGWJDGWJDGWJDGWJDGWJDGWJD
        GWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJD
        GWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGb+5sNTU1NLS0pyNeTMjDQAAPSoQqJyN09PT1dXVt6+jYkMZ
        YkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZwLqy1dXV09PTnI15MyMN
        AAA9KhConY3U1NTW1tbPzMloSyNiQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxli
        QxltUSvT0tDW1tbU1NSdjnozIw0AAD0qEKmdjtXV1dfX19nZ2bGnmGRFHGJDGWJDGWJDGWJDGWJDGWJD
        GWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJD
        GWJDGWJDGWJDGWJDGWJDGWJDGWVHHrmwpNnZ2dfX19XV1Z2OejMjDQAAPSoQqp6O1tbW2NjY2tra3Nzc
        ubCkbVEqYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZcFUwv7it3Nzc2tra2NjY1tbWno97MyMN
        AAA9KhCqno/X19fZ2dnb29vd3d3f39/Y1tOdjHVpSyRiQxliQxliQxliQxliQxliQxliQxliQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxlrTieikn3a2dff
        39/d3d3b29vZ2dnX19eej3szIw0AAD0qEKqfj9jY2Nra2tzc3N7e3uDg4OLi4uTk5N3b2KKSe2dJIWJD
        GWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJD
        GWJDGWpNJaiZhd/e2+Tk5OLi4uDg4N7e3tvb29nZ2dfX156PezMjDQAAPSoQq5+Q2NjY2tra3Nzc3t7e
        4eHh4+Pj5eXl5+fn6enp29fSlYJoZEUcYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZYkMZYkMZYkMZZkcenIpx3tzY6enp5+fn5eXl4uLi4ODg3t7e3Nzc2tra2NjYn5B8MyMN
        AAA9KhCrn5DZ2dnb29vd3d3f39/h4eHj4+Pl5eXn5+fp6enr6+vt7e3Y082XhGlmSCBiQxliQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxliQxloSyOdi3Ld2NPt7e3r6+vp6enn5+fl5eXj4+Ph
        4eHf39/d3d3b29vY2NifkHwzIw0AAD0qEKugkNnZ2dvb293d3eDg4OLi4uTk5Obm5ujo6Orq6uzs7O7u
        7vDw8PLy8ufk4LWolYZvT2ZIH2JDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWdJIYpzVbqtnOrn5fLy8vDw
        8O7u7uzs7Orq6ujo6Obm5uTk5OLi4t/f393d3dvb29nZ2Z+QfDMjDQAAPSoQrKCQ2dnZ3Nzc3t7e4ODg
        4uLi5OTk5ubm6enp6+vr7e3t7+/v8fHx8vLy9PT09vb29/f37+3qe2E+YkMZYkMZYkMZYkMZYkMZYkMZ
        j3lc8/Lw9/f39vb29PT08vLy8PDw7+/v7e3t6+vr6Ojo5ubm5OTk4uLi4ODg3t7e29vb2dnZn5B8MyMN
        AAA9KhCsoJDa2trc3Nze3t7g4ODi4uLl5eXn5+fp6enr6+vt7e3v7+/x8fHz8/P19fX29vb4+Pixoo5i
        QxliQxliQxliQxliQxliQxliQxliRBrLwrX4+Pj29vb19fXz8/Px8fHv7+/t7e3r6+vp6enm5ubk5OTi
        4uLg4ODe3t7c3NzZ2dmfkHwzIw0AAD0qEKygkNra2tzc3N7e3uDg4OLi4uXl5efn5+np6evr6+3t7e/v
        7/Hx8fPz8/X19ff39+nm4WhLImJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGXZcN/T08/b29vX19fPz8/Hx
        8e/v7+3t7evr6+np6efn5+Tk5OLi4uDg4N7e3tzc3Nra2p+RfDMjDQAAPSoQrKCQ2tra3Nzc3t7e4ODg
        4uLi5eXl5+fn6enp6+vr7e3t7+/v8fHx8/Pz9fX19/f3pJN8YkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZvrKh9vb29fX18/Pz8fHx7+/v7e3t6+vr6enp5+fn5OTk4uLi4ODg3t7e3Nzc2tran5F8MyMN
        AAA9KhCsoJDa2trc3Nze3t7g4ODi4uLl5eXn5+fp6enr6+vt7e3v7+/x8fHz8/P19fXu7OlqTSZiQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxl7Yj/19fX09PTz8/Px8fHv7+/t7e3r6+vp6enm5ubk5OTi
        4uLg4ODe3t7c3NzZ2dmfkHwzIw0AAD0qEKygkNnZ2dzc3N7e3uDg4OLi4uTk5Obm5unp6evr6+3t7e/v
        7/Hx8fLy8vT09LirmmJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGdDJvvT09PLy8vDw
        8O7u7uzs7Orq6ujo6Obm5uTk5OLi4uDg4N7e3tvb29nZ2Z+QfDMjDQAAPSoQq6CQ2dnZ29vb3d3d39/f
        4uLi5OTk5ubm6Ojo6urq7Ozs7u7u8PDw8vLy8/PzgWlIYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZmYZr8/Pz8vLy8PDw7u7u7Ozs6urq6Ojo5ubm5OTk4eHh39/f3d3d29vb2dnZn5B8MyMN
        AAA9KhCrn5DZ2dnb29vd3d3f39/h4eHj4+Pl5eXn5+fp6enr6+vt7e3v7+/x8fHu7exlRx5iQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxl5Xzvy8vLx8fHv7+/t7e3r6+vp6enn5+fl5eXj4+Ph
        4eHf39/d3d3b29vY2NifkHwzIw0AAD0qEKufkNjY2Nra2tzc3N7e3uDg4OPj4+Xl5efn5+np6erq6uzs
        7O7u7vDw8OTh3WJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGW1QKfHx8fDw8O7u
        7uzs7Orq6ujo6Obm5uTk5OLi4uDg4N7e3tzc3Nra2tjY2J+QfDMjDQAAPSoQqp+P19fX2dnZ3Nzc3t7e
        4ODg4uLi5OTk5ubm6Ojo6enp6+vr7e3t7+/v4t7aYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZa08n8PDw7+/v7e3t6+vr6enp6Ojo5ubm5OTk4uLi4ODg3d3d29vb2dnZ19fXno97MyMN
        AAA9KhCqno/X19fZ2dnb29vd3d3f39/h4eHj4+Pl5eXn5+fo6Ojq6urs7Ozt7e3h3tpiQxliQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxlrTifv7+/t7e3s7Ozq6uro6Ojn5+fl5eXj4+Ph4eHf
        39/d3d3b29vZ2dnX19eej3szIw0AAD0qEKqejtbW1tjY2Nra2tzc3N7e3uDg4OLi4uTk5OXl5efn5+np
        6evr6+zs7NzY02JDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWdKIe3t7Ozs7Orq
        6unp6efn5+Xl5eTk5OLi4uDg4N7e3tzc3Nra2tjY2NbW1p6PezMjDQAAPSoQqZ2O1dXV19fX2dnZ29vb
        3d3d39/f4ODg4uLi5OTk5ubm6Ojo6enp6urq1M/IYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZZEUc6Ofm6urq6enp5+fn5ubm5OTk4uLi4ODg3t7e3d3d29vb2dnZ19fX1dXVnY56MyMN
        AAA9KhConY3U1NTW1tbY2Nja2trc3Nzd3d3f39/h4eHj4+Pk5OTm5ubo6Ojp6enTzcZiQxliQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxliQxlkRRzm5uTp6enn5+fm5ubk5OTj4+Ph4eHf39/d3d3b
        29va2trY2NjW1tbU1NSdjnozIw0AAD0qEKicjdPT09XV1dfX19nZ2dra2tzc3N7e3uDg4OHh4ePj4+Tk
        5Obm5ufn593b2GNEG2JDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGW9TLOjo6Ofn5+bm
        5uTk5OPj4+Hh4eDg4N7e3tzc3Nra2tjY2NfX19XV1dPT05yNeTMjDQAAPSoQp5yM0tLS1NTU1tbW19fX
        2dnZ29vb3Nzc3t7e4ODg4eHh4+Pj5OTk5eXl5ubmgGdHYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZYkMZ
        YkMZYkMZYkMZlYJo5ubm5eXl5OTk4+Pj4eHh4ODg3t7e3Nzc29vb2dnZ19fX1dXV1NTU0tLSnI15MyMN
        AAA9Kg+mm4vR0dHT09PU1NTW1tbY2NjZ2dnb29vc3Nze3t7f39/h4eHi4uLj4+Pl5eW7sqRiQxliQxli
        QxliQxliQxliQxliQxliQxliQxliQxliQxlkRh3OycLk5OTj4+Pi4uLh4eHf39/e3t7c3Nzb29vZ2dnX
        19fW1tbU1NTS0tLR0dGbjHgyIg0AADcmDqCSgNDQ0NHR0dPT09XV1dbW1tjY2NnZ2dvb29zc3N7e3t/f
        3+Dg4OLi4uPj4+Pj45OAZmJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGWJDGamah+Pj4+Li4uHh4eDg
        4N/f397e3tzc3Nvb29nZ2djY2NbW1tXV1dPT09HR0dDQ0JSDbS0fCwAAJhoKjHlfz8/P0NDQ0tLS09PT
        1dXV1tbW2NjY2dnZ29vb3Nzc3d3d3t7e4ODg4eHh4eHh4eDgo5R/aEoiYkMZYkMZYkMZYkMZYkMZYkMZ
        bFApsaaW4uLi4eHh4ODg39/f3t7e3d3d3Nzc29vb2dnZ2NjY1tbW1dXV09PT0tLS0NDQz8/PgGpMHBMH
        AAAMCANsUCrLy8rPz8/Q0NDS0tLT09PV1dXW1tbY2NjZ2dna2trb29vd3d3e3t7f39/f39/g4ODh4eHZ
        19S1q5yfj3mWg2qWhGuikn27saXd3Nrh4eHg4ODf39/e3t7e3t7d3d3b29va2trZ2dnY2NjW1tbV1dXT
        09PS0tLQ0NDPz8/GxMFiRR4FAwEAAAAAAEcwEqOWhs7Ozs/Pz9DQ0NLS0tPT09XV1dbW1tfX19jY2Nra
        2tvb29zc3Nzc3N3d3d7e3t/f39/f39/f3+Dg4ODg4ODg4ODg4N/f39/f39/f397e3t3d3dzc3Nzc3Nvb
        29ra2tjY2NfX19bW1tTU1NPT09LS0tDQ0M/Pz87OzpeIczwpDwAAAAAAAAAAEgwFZ0slwLy3zs7Oz8/P
        0NDQ0tLS09PT1NTU1dXV19fX2NjY2dnZ2tra2tra29vb3Nzc3Nzc3d3d3d3d3t7e3t7e3t7e3t7e3d3d
        3d3d3Nzc3Nzc29vb2tra2tra2dnZ2NjY19fX1dXV1NTU09PT0tLS0NDQz8/Pzs7OubKrYEQdCwgDAAAA
        AAAAAAAAAAApHApzWTbBvbnOzs7Pz8/Q0NDR0dHS0tLU1NTV1dXW1tbX19fY2NjY2NjZ2dna2tra2trb
        29vb29vb29vb29vb29vb29vb29vb29va2tra2trZ2dnY2NjY2NjX19fW1tbV1dXU1NTS0tLR0dHQ0NDP
        z8/Nzc27tq9tUSwfFggAAAAAAAAAAAAAAAAAAAAAACsdC2pOKamekM3MzM7OztDQ0NHR0dLS0tPT09TU
        1NXV1dbW1tbW1tfX19jY2NjY2NnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2djY2NjY2NjY2NfX19bW1tbW1tXV
        1dTU1NPT09LS0tHR0c/Pz87OzsvLyqKVhWRIIiIXCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQ4FTDUU
        c1k2l4hyrqSYt7GnurOru7Ssu7WsvLatvbauvbeuvrevvrivv7iwv7mwv7mwv7mwv7mwv7mwv7mwv7mw
        v7iwv7iwvrivvrevvbeuvbauvLatu7Wsu7SsurOrt7CnrKKVlIRtcFQwSDESEAsEAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAVDgUwIQxDLhFMNBNNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRN
        NRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRNNRRLMxNCLREuHwwR
        DAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>